var m;
var mm;
var micm;
var nm;
var pm;
var fm;
var ym;
var cm;
var dm;
var dam;
var em;
var hm;
var ang;
var km;
var mi;
var yd;
var ft;
var inch;
var micn;
var mic;
var pc;
var fur;
var ch;
var rd;
var pole;
var perch;
var thou;
var hands;
var mil;
var nmi;
var nl;
var cable;
var fath;
var ly;
var peta;
var tera;
var giga;
var mega;
var atto;
var megapar;
var kilopar;
var au;
var lea;
var slea;
var nlk;
var nimk;
var rp;
var li;
var cubuk;
var finger;
var span;
var nail;
var ell;
var x;
var f;
var arpent;
var pica;
var point;
var twip;
var cl;
var cin;
var ken;
var reed;
var hbr;
var fbr;
var fal;
$("[purpose=m],[purpose=mm],[purpose=micm],[purpose=nm],[purpose=pm],[purpose=fm],[purpose=ym],[purpose=cm],[purpose=dm],[purpose=dam],[purpose=em],[purpose=hm],[purpose=ang],[purpose=km],[purpose=mi],[purpose=yd],[purpose=ft],[purpose=inch],[purpose=micn],[purpose=mic],[purpose=pc],[purpose=fur],[purpose=ch],[purpose=rd],[purpose=pole],[purpose=perch],[purpose=hands],[purpose=mil],[purpose=thou],[purpose=nmi],[purpose=nl],[purpose=cable],[purpose=fath],[purpose=ly],[purpose=peta],[purpose=tera],[purpose=giga],[purpose=mega],[purpose=atto],[purpose=megapar],[purpose=kilopar],[purpose=au],[purpose=lea],[purpose=slea],[purpose=nlk],[purpose=nimk],[purpose=rp],[purpose=li],[purpose=cubuk],[purpose=finger],[purpose=span],[purpose=nail],[purpose=ell],[purpose=x],[purpose=f],[purpose=arpent],[purpose=pica],[purpose=point],[purpose=twip],[purpose=cl],[purpose=cin],[purpose=ken],[purpose=reed],[purpose=hbr],[purpose=fbr]").on("change paste keyup", function() {
   var val=$(this).val();
   fal=$(this).attr("purpose");
   convert_leng(val,fal);
});
function convert_leng(val,fal){
    if(isNaN(val))return;
	if(fal=="m")em= 1.0e+31;
if(fal=="mm")em= 1.0e+34;
if(fal=="micm")em= 1.0e+37;
if(fal=="nm")em= 1.0e+40;
if(fal=="pm")em= 1.0e+43;
if(fal=="fm")em= 1.0e+46;
if(fal=="ym")em= 1.0e+55;
if(fal=="cm")em= 1.0e+33;
if(fal=="dm")em= 1.0e+32;
if(fal=="dam")em= 1.0e+30;
if(fal=="em")em= 10000000000000;
if(fal=="hm")em= 1.0e+29;
if(fal=="ang")em= 1.0e+41;
if(fal=="km")em= 1.0e+28;
if(fal=="mi")em= 6.2137119223733e+27;
if(fal=="yd")em= 1.0936132983377e+31;
if(fal=="ft")em= 3.2808398950131e+31;
if(fal=="inch")em= 3.9370078740157e+32;
if(fal=="micn")em= 3.9370078740157e+38;
if(fal=="mic")em= 1.0e+37;
if(fal=="pc")em= 3.2407792896664e+14;
if(fal=="fur")em= 4.9709695378987e+28;
if(fal=="ch")em= 4.9709695378987e+29;
if(fal=="rd")em= 1.9883878151595e+30;
if(fal=="pole")em= 1.9883878151595e+30;
if(fal=="perch")em= 1.9883878151595e+30;
if(fal=="hands")em= 9.8425196850394e+31;
if(fal=="mil")em= 3.9370078740158e+35;
if(fal=="thou")em= 3.9370078740158e+35;
if(fal=="nmi")em= 5.3995680345572e+27;
if(fal=="nl")em= 1.7998560115191e+27;
if(fal=="cable")em= 5.399568034557e+28;
if(fal=="fath")em= 5.4680664916885e+30;
if(fal=="ly")em= 1.0570008340247e+15;
if(fal=="peta")em= 1.0e+16;
if(fal=="tera")em= 1.0e+19;
if(fal=="giga")em= 1.0e+22;
if(fal=="mega")em= 1.0e+25;
if(fal=="atto")em= 1.0e+49;
if(fal=="megapar")em= 324077928.96664;
if(fal=="kilopar")em= 324077928966.64;
if(fal=="au")em= 6.6845871226706e+19;
if(fal=="lea")em= 2.0712373074578e+27;
if(fal=="slea")em= 2.0712331649832e+27;
if(fal=="nlk")em= 1.7987060827923e+27;
if(fal=="nimk")em= 5.3961182483768e+27;
if(fal=="rp")em= 1.6404199475066e+30;
if(fal=="li")em= 4.9709695378987e+31;
if(fal=="cubuk")em= 2.1872265966754e+31;
if(fal=="finger")em= 8.7489063867017e+31;
if(fal=="span")em= 4.3744531933508e+31;
if(fal=="nail")em= 1.7497812773403e+32;
if(fal=="ell")em= 8.7489063867017e+30;
if(fal=="x")em= 9.9792431741977e+43;
if(fal=="f")em= 1.0e+46;
if(fal=="arpent")em= 1.7087707786527e+29;
if(fal=="pica")em= 2.3622047244095e+33;
if(fal=="point")em= 2.8346456692913e+34;
if(fal=="twip")em= 5.6692913385827e+35;
if(fal=="cl")em= 3.9370078740158e+34;
if(fal=="cin")em= 3.9370078740158e+34;
if(fal=="ken")em= 4.7206329424649e+30;
if(fal=="reed")em= 3.6453776611257e+30;
if(fal=="hbr")em= 1.3123359580052e+32;
if(fal=="fbr")em= 5.249343832021e+32;

m= 1.0e+31/em;
mm= 1.0e+34/em;
micm= 1.0e+37/em;
nm= 1.0e+40/em;
pm= 1.0e+43/em;
fm= 1.0e+46/em;
ym= 1.0e+55/em;
cm= 1.0e+33/em;
dm= 1.0e+32/em;
dam= 1.0e+30/em;
hm= 1.0e+29/em;
ang= 1.0e+41/em;
km= 1.0e+28/em;
mi= 6.2137119223733e+27/em;
yd= 1.0936132983377e+31/em;
ft= 3.2808398950131e+31/em;
inch= 3.9370078740157e+32/em;
micn= 3.9370078740157e+38/em;
mic= 1.0e+37/em;
pc= 3.2407792896664e+14/em;
fur= 4.9709695378987e+28/em;
ch= 4.9709695378987e+29/em;
rd= 1.9883878151595e+30/em;
pole= 1.9883878151595e+30/em;
perch= 1.9883878151595e+30/em;
hands= 9.8425196850394e+31/em;
mil= 3.9370078740158e+35/em;
thou= 3.9370078740158e+35/em;
nmi= 5.3995680345572e+27/em;
nl= 1.7998560115191e+27/em;
cable= 5.399568034557e+28/em;
fath= 5.4680664916885e+30/em;
ly= 1.0570008340247e+15/em;
peta= 1.0e+16/em;
tera= 1.0e+19/em;
giga= 1.0e+22/em;
mega= 1.0e+25/em;
atto= 1.0e+49/em;
megapar= 324077928.96664/em;
kilopar= 324077928966.64/em;
au= 6.6845871226706e+19/em;
lea= 2.0712373074578e+27/em;
slea= 2.0712331649832e+27/em;
nlk= 1.7987060827923e+27/em;
nimk= 5.3961182483768e+27/em;
rp= 1.6404199475066e+30/em;
li= 4.9709695378987e+31/em;
cubuk= 2.1872265966754e+31/em;
finger= 8.7489063867017e+31/em;
span= 4.3744531933508e+31/em;
nail= 1.7497812773403e+32/em;
ell= 8.7489063867017e+30/em;
x= 9.9792431741977e+43/em;
f= 1.0e+46/em;
arpent= 1.7087707786527e+29/em;
pica= 2.3622047244095e+33/em;
point= 2.8346456692913e+34/em;
twip= 5.6692913385827e+35/em;
cl= 3.9370078740158e+34/em;
cin= 3.9370078740158e+34/em;
ken= 4.7206329424649e+30/em;
reed= 3.6453776611257e+30/em;
hbr= 1.3123359580052e+32/em;
fbr= 5.249343832021e+32/em;
em= 10000000000000/em;

    m=val * m;
mm=val * mm;
micm=val * micm;
nm=val * nm;
pm=val * pm;
fm=val * fm;
ym=val * ym;
cm=val * cm;
dm=val * dm;
dam=val * dam;
em=val * em;
hm=val * hm;
ang=val * ang;
km=val * km;
mi=val * mi;
yd=val * yd;
ft=val * ft;
inch=val * inch;
micn=val * micn;
mic=val * mic;
pc=val * pc;
fur=val * fur;
ch=val * ch;
rd=val * rd;
pole=val * pole;
perch=val * perch;
hands=val * hands;
mil=val * mil;
thou=val * thou;
nmi=val * nmi;
nl=val * nl;
cable=val * cable;
fath=val * fath;
ly=val * ly;
peta=val*peta;
tera=val*tera;
giga=val*giga;
mega=val*mega;
atto=val*atto;
megapar=val*megapar;
kilopar=val*kilopar;
au=val*au;
lea=val*lea;
slea=val*slea;
nlk=val*nlk;
nimk=val*nimk;
rp=val*rp;
li=val*li;
cubuk=val*cubuk;
finger=val*finger;
span=val*span;
nail=val*nail;
ell=val*ell;
x=val*x;
f=val*f;
arpent=val*arpent;
pica=val*pica;
point=val*point;
twip=val*twip;
cl=val*cl;
cin=val*cin;
ken=val*ken;
reed=val*reed;
hbr=val*hbr;
fbr=val*fbr;

m=manual(m);
mm=manual(mm);
micm=manual(micm);
nm=manual(nm);
pm=manual(pm);
fm=manual(fm);
ym=manual(ym);
cm=manual(cm);
dm=manual(dm);
dam=manual(dam);
em=manual(em);
hm=manual(hm);
ang=manual(ang);
km=manual(km);
mi=manual(mi);
yd=manual(yd);
ft=manual(ft);
inch=manual(inch);
micn=manual(micn);
mic=manual(mic);
pc=manual(pc);
fur=manual(fur);
ch=manual(ch);
rd=manual(rd);
pole=manual(pole);
perch=manual(perch);
hands=manual(hands);
mil=manual(mil);
thou=manual(thou);
nmi=manual(nmi);
nl=manual(nl);
cable=manual(cable);
fath=manual(fath);
ly=manual(ly);
peta=manual(peta);
tera=manual(tera);
giga=manual(giga);
mega=manual(mega);
atto=manual(atto);
megapar=manual(megapar);
kilopar=manual(kilopar);
au=manual(au);
lea=manual(lea);
slea=manual(slea);
nlk=manual(nlk);
nimk=manual(nimk);
rp=manual(rp);
li=manual(li);
cubuk=manual(cubuk);
finger=manual(finger);
span=manual(span);
nail=manual(nail);
ell=manual(ell);
x=manual(x);
f=manual(f);
arpent=manual(arpent);
pica=manual(pica);
point=manual(point);
twip=manual(twip);
cl=manual(cl);
cin=manual(cin);
ken=manual(ken);
reed=manual(reed);
hbr=manual(hbr);
fbr=manual(fbr);

        if(fal!="m")$("[purpose=m]").val(m);
        if(fal!="mm")$("[purpose=mm]").val(mm);
        if(fal!="micm")$("[purpose=micm]").val(micm);
        if(fal!="nm")$("[purpose=nm]").val(nm);
        if(fal!="pm")$("[purpose=pm]").val(pm);
        if(fal!="fm")$("[purpose=fm]").val(fm);
        if(fal!="ym")$("[purpose=ym]").val(ym);
        if(fal!="cm")$("[purpose=cm]").val(cm);
        if(fal!="dm")$("[purpose=dm]").val(dm);
        if(fal!="dam")$("[purpose=dam]").val(dam);
        if(fal!="em")$("[purpose=em]").val(em);
        if(fal!="hm")$("[purpose=hm]").val(hm);
        if(fal!="ang")$("[purpose=ang]").val(ang);
        if(fal!="km")$("[purpose=km]").val(km);
        if(fal!="mi")$("[purpose=mi]").val(mi);
        if(fal!="yd")$("[purpose=yd]").val(yd);
        if(fal!="ft")$("[purpose=ft]").val(ft);
        if(fal!="inch")$("[purpose=inch]").val(inch);
        if(fal!="micn")$("[purpose=micn]").val(micn);
        if(fal!="mic")$("[purpose=mic]").val(mic);
        if(fal!="pc")$("[purpose=pc]").val(pc);
        if(fal!="fur")$("[purpose=fur]").val(fur);
        if(fal!="ch")$("[purpose=ch]").val(ch);
        if(fal!="rd")$("[purpose=rd]").val(rd);
        if(fal!="pole")$("[purpose=pole]").val(pole);
        if(fal!="perch")$("[purpose=perch]").val(perch);
        if(fal!="hands")$("[purpose=hands]").val(hands);
        if(fal!="mil")$("[purpose=mil]").val(mil);
        if(fal!="thou")$("[purpose=thou]").val(thou);
        if(fal!="nmi")$("[purpose=nmi]").val(nmi);
        if(fal!="nl")$("[purpose=nl]").val(nl);
        if(fal!="cable")$("[purpose=cable]").val(cable);
        if(fal!="fath")$("[purpose=fath]").val(fath);
        if(fal!="ly")$("[purpose=ly]").val(ly);
        if(fal!="peta")$("[purpose=peta]").val(peta);
if(fal!="tera")$("[purpose=tera]").val(tera);
if(fal!="giga")$("[purpose=giga]").val(giga);
if(fal!="mega")$("[purpose=mega]").val(mega);
if(fal!="atto")$("[purpose=atto]").val(atto);
if(fal!="megapar")$("[purpose=megapar]").val(megapar);
if(fal!="kilopar")$("[purpose=kilopar]").val(kilopar);
if(fal!="au")$("[purpose=au]").val(au);
if(fal!="lea")$("[purpose=lea]").val(lea);
if(fal!="slea")$("[purpose=slea]").val(slea);
if(fal!="nlk")$("[purpose=nlk]").val(nlk);
if(fal!="nimk")$("[purpose=nimk]").val(nimk);
if(fal!="rp")$("[purpose=rp]").val(rp);
if(fal!="li")$("[purpose=li]").val(li);
if(fal!="cubuk")$("[purpose=cubuk]").val(cubuk);
if(fal!="finger")$("[purpose=finger]").val(finger);
if(fal!="span")$("[purpose=span]").val(span);
if(fal!="nail")$("[purpose=nail]").val(nail);
if(fal!="ell")$("[purpose=ell]").val(ell);
if(fal!="x")$("[purpose=x]").val(x);
if(fal!="f")$("[purpose=f]").val(f);
if(fal!="arpent")$("[purpose=arpent]").val(arpent);
if(fal!="pica")$("[purpose=pica]").val(pica);
if(fal!="point")$("[purpose=point]").val(point);
if(fal!="twip")$("[purpose=twip]").val(twip);
if(fal!="cl")$("[purpose=cl]").val(cl);
if(fal!="cin")$("[purpose=cin]").val(cin);
if(fal!="ken")$("[purpose=ken]").val(ken);
if(fal!="reed")$("[purpose=reed]").val(reed);
if(fal!="hbr")$("[purpose=hbr]").val(hbr);
if(fal!="fbr")$("[purpose=fbr]").val(fbr);

}
function manual(r){var data=""+r;if(data.indexOf("N")>=0||r==2*r&&r==1+r)return"Error ";var n=data.indexOf("e");if(n>=0){var e=data.substring(n+1,data.length);if(n>11&&(n=11),(data=data.substring(0,n)).indexOf(".")<0)data+=".";else{for(j=data.length-1;j>=0&&"0"==data.charAt(j);)--j;data=data.substring(0,j+1)}data+="e"+e}else{var a=!1;r<0&&(r=-r,a=!0);var s=Math.floor(r),f=r-s,g=12-(""+s).length-1,i=" 1000000000000000000".substring(1,g+2);i=""==i||" "==i?1:parseInt(i);var o=Math.floor(f*i+.5);s=Math.floor(Math.floor(r*i+.5)/i),data=a?"-"+s:""+s;var h="00000000000000"+o;for(n=(h=h.substring(h.length-g,h.length)).length-1;n>=0&&"0"==h.charAt(n);)--n;h=h.substring(0,n+1),n>=0&&(data+="."+h)}return data}

